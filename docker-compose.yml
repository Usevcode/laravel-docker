
services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: laravel-app
    restart: unless-stopped
    working_dir: /var/www/
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - VIEW_CACHE_ENABLED=false
    volumes:
      - ./src:/var/www:cached
      - ./docker/php/local.ini:/usr/local/etc/php/conf.d/local.ini:ro
    networks:
      - laravel-network

  db:
    image: mysql:8.0
    container_name: laravel-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      MYSQL_PASSWORD: password
      MYSQL_USER: laravel
    volumes:
      - ./dbdata:/var/lib/mysql
    networks:
      - laravel-network

  nginx:
    image: nginx:alpine
    container_name: laravel-nginx
    restart: unless-stopped
    ports:
      - "8000:80"
    volumes:
      - ./src:/var/www:cached
      - ./docker/nginx:/etc/nginx/conf.d:ro
    networks:
      - laravel-network

  phpmyadmin:
    image: phpmyadmin:latest
    container_name: laravel-phpmyadmin
    restart: unless-stopped
    ports:
      - "8080:80"
    environment:
      PMA_HOST: db
      MYSQL_ROOT_PASSWORD: root
    networks:
      - laravel-network

  node:
    image: node:20-alpine
    container_name: laravel-node
    restart: "no"
    working_dir: /var/www
    volumes:
      - ./src:/var/www:cached
    ports:
      - "5173:5173"
    networks:
      - laravel-network
    command: sh -c "if [ -f package.json ]; then npm install && npm run dev; else echo 'Waiting for package.json...' && tail -f /dev/null; fi"

networks:
  laravel-network:
    driver: bridge

volumes:
  mysql-data:
    driver: local
